<%= simple_form_for(@country, defaults: { wrapper_html: { class: 'w-100 pr-2 pl-2' } },html: { class: 'form-inline mb-5' }) do |f| %>
  <%= f.error_notification %>
  <%= f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present? %>
  <div class="form-inputs w-100 mr-10 ml-10">

    <%= f.input :name %>
    <%= f.input :agriculture,   collection: agrihash, label_method: :second, value_method: :first, include_blank: false %>
    <%= f.input :education,     collection: eduhash, label_method: :second, value_method: :first, include_blank: false %>
    <%= f.input :security,      collection: securityhash, label_method: :second, value_method: :first, include_blank: false %>
    <%= f.input :comms,         collection: commshash, label_method: :second, value_method: :first, include_blank: false %>
    <%= f.input :social_sec,    collection: social_sechash, label_method: :second, value_method: :first, include_blank: false %>
    <%= f.input :health,        collection: healthhash, label_method: :second, value_method: :first, include_blank: false %>
    <%= f.input :water,         collection: waterhash, label_method: :second, value_method: :first, include_blank: false %>
    <%= f.input :energy,        collection: energyhash, label_method: :second, value_method: :first, include_blank: false %>
		<%= f.input :budget,        as: :hidden %>
    <%= f.input :civ_num,       as: :hidden %>
    <%= f.input :init_civ,      as: :hidden %>
		<div class="form-actions">
			<%= f.button :submit, class: "btn btn-success", id:"submit" %>
      <!-- <div class="budget-minus"></div> -->
		</div>
  </div>
<% end %>

<footer class="footer fixed-bottom bg-info">
  <div class="container text-white">
    <%= Country.human_attribute_name(:budget) %>: <span id="budget"><%= @country.budget%></span>
    <span class="budget-minus"></span>
  </div>
</footer>

<script type="text/javascript">
	costs = [<%= @agriculture_costs.values %>,
		 			 <%= @education_costs.values %>,
					 <%= @security_costs.values %>,
					 <%= @comms_costs.values %>,
					 <%= @social_sec_costs.values %>,
					 <%= @health_costs.values %>,
					 <%= @water_costs.values %>,
					 <%= @energy_costs.values %>]
	all_costs = 0
	$.each($("select"),function(index, el) {
		// console.log(index);
		$(el).children("option[value='low']").append(" - " + costs[index][2])
		$(el).children("option[value='medium']").append(" - " + costs[index][1])
		$(el).children("option[value='high']").append(" - " + costs[index][0])
    cost = parseInt($(el).children("option:selected").html().split(" ")[$(el).children("option:selected").html().split(" ").length-1]);
		all_costs = all_costs + cost
    console.log($(el).children("option:selected").html().split(" "));
	});
	start_budget = <%= @country.budget %> - all_costs
  // console.log(costs);
	$("#budget").html(start_budget)

	$("select").change(function(event) {
    costs = 0
    $.each($("select"),function(index, el) {
  		cost = parseInt($(el).children("option:selected").html().split(" ")[$(el).children("option:selected").html().split(" ").length-1]);
      console.log("length: " + $(el).children("option:selected").html().length)
      costs = costs + cost
  	});
    console.log("costs: " + costs);
		new_budget = <%= @country.budget %> - costs
		$("#budget").html(new_budget)
    // $("#country_budget").val($("#budget").html())
    if (parseInt($("#budget").html()) < 0) {
      // $(".budget-minus").removeClass('d-none')
      $(".budget-minus").append("<%= j (render partial: 'budget_minus') %>")
    }
    else {
      $(".budget-minus-partial").remove()
    }
	});

  $('#new_country').validate({ // initialize the plugin
    submitHandler: function(form) {
      if (parseInt($("#budget").html()) < 0) {
        console.log("<0");
        $(".budget-minus").removeClass('d-none')
      }
      else {
        $("#country_budget").val($("#budget").html())
        form.submit();
      }
    },
    errorPlacement: function(label, element) {
     label.addClass('er');
     label.insertAfter(element);
    },
    wrapper: 'span',
      rules: {
        "country[name]": {
            required: true
        },
        // "country[budget]": {
        //     required: true,
        //     digits: true
        // }
      },
      messages: {
        "country[name]": {
        required: "חייב להיות שם"
      },
       // "country[budget]": {
       //   required: "התקציב חייב להיות חיובי",
       //   digits: "התקציב חייב להיות חיובי"
       // },
      }
    });
</script>
